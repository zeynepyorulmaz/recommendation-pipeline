name: Deploy to EC2

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_REGION: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Create deployment package
      run: |
        chmod +x ./deploy-robust.sh
        ./deploy-robust.sh
        
    - name: Deploy to EC2 using CloudFormation
      run: |
        chmod +x ./deploy-cloudformation.sh
        ./deploy-cloudformation.sh
        
    - name: Deploy application to EC2
      run: |
        # Get the EC2 instance IP from CloudFormation outputs
        INSTANCE_IP=$(aws cloudformation describe-stacks \
          --stack-name fashion-pipeline-stack \
          --query 'Stacks[0].Outputs[?OutputKey==`PublicIP`].OutputValue' \
          --output text \
          --region us-east-1)
        
        echo "üåç EC2 Instance IP: $INSTANCE_IP"
        
        # Wait for instance to be ready
        echo "‚è≥ Waiting for instance to be ready..."
        sleep 60
        
        # Upload and deploy application
        echo "üì¶ Uploading deployment package..."
        scp -o StrictHostKeyChecking=no -i ~/.ssh/ec2-key.pem deployment-package.tar.gz ubuntu@$INSTANCE_IP:~/
        
        echo "üöÄ Deploying application..."
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2-key.pem ubuntu@$INSTANCE_IP << 'EOF'
          # Extract deployment package
          tar -xzf deployment-package.tar.gz
          
          # Install Python and dependencies
          sudo apt-get update -y
          sudo apt-get install -y python3 python3-pip python3-venv
          
          # Create virtual environment
          python3 -m venv venv
          source venv/bin/activate
          
          # Install requirements
          pip install -r requirements.txt
          
          # Start the application
          nohup python direct_pipeline.py > app.log 2>&1 &
          
          echo "‚úÖ Application deployed successfully!"
          echo "üìä Check logs: tail -f app.log"
        EOF
        
        echo "üéâ Deployment completed!"
        echo "üåç Application URL: http://$INSTANCE_IP:5000" 